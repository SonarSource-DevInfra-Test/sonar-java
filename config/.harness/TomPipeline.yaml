pipeline:
    name: TomPipeline
    identifier: TomPipeline
    allowStageExecutions: true
    projectIdentifier: SonarJava
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: account.HarnessSonarsourcePOC
                repoName: sonar-java
                build: <+input>
    stages:
        - stage:
              name: BUILD
              identifier: BUILD
              type: CI
              spec:
                  cloneCodebase: true
                  sharedPaths:
                      - /home/sonarsource/.m2/repository
                      - /home/sonarsource/.m2
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: account.k8sdev
                          namespace: harness-build
                  execution:
                      steps:
                          - step:
                                type: RestoreCacheS3
                                name: MavenRestoreCache
                                identifier: MavenRestoreCache
                                spec:
                                    connectorRef: account.awsdev
                                    region: eu-central-1
                                    bucket: harness-cache-dev
                                    key: m2-repos
                                    archiveFormat: Tar
                                    failIfKeyNotFound: false
                                    runAsUser: "1000"
                                failureStrategies:
                                    - onFailure:
                                          errors:
                                              - Timeout
                                              - Unknown
                                          action:
                                              type: MarkAsSuccess
                          - step:
                                name: build
                                identifier: build
                                template:
                                    templateRef: account.regular_mvn_build
                                    versionLabel: Version2
                          - step:
                                type: SaveCacheS3
                                name: MavenCache
                                identifier: MavenCache
                                spec:
                                    connectorRef: account.awsdev
                                    region: eu-central-1
                                    bucket: harness-cache-dev
                                    key: m2-repos
                                    sourcePaths:
                                        - /home/sonarsource/.m2/repository
                                    archiveFormat: Tar
                                    override: true
                                    runAsUser: "1000"
                                failureStrategies:
                                    - onFailure:
                                          errors:
                                              - AllErrors
                                          action:
                                              type: MarkAsSuccess
                          - step:
                                type: Run
                                name: run-ruling
                                identifier: runruling
                                spec:
                                    connectorRef: account.awsdev
                                    image: 501215020883.dkr.ecr.eu-central-1.amazonaws.com/harness-images-dev:latest
                                    command: |-
                                        git submodule update --init
                                        source harness-env QA
                                        source set_maven_build_version <+execution.steps.BUILD.output.outputVariables.BUILD_NUMBER>
                                        cd its/ruling
                                        mvn package -Pit-ruling -Dsonar.runtimeVersion=LATEST_RELEASE[8.9] -Dmaven.test.redirectTestOutputToFile=false -B -e -V -Dparallel=methods -DuseUnlimitedThreads=true
                                    envVariables:
                                        ARTIFACTORY_URL: https://repox.jfrog.io/repox
                                        ARTIFACTORY_PRIVATE_USERNAME: <+secrets.getValue("account.ARTIFACTORY_PRIVATE_USERNAME")>
                                        ARTIFACTORY_PRIVATE_PASSWORD: <+secrets.getValue("account.ARTIFACTORY_PRIVATE_PASSWORD")>
                                        GITHUB_TOKEN: <+secrets.getValue("account.github_tomverin")>
                                    shell: Bash
                                    resources:
                                        limits:
                                            memory: 16Gi
                                            cpu: "8"
                          - step:
                                type: Run
                                name: promote
                                identifier: promote
                                spec:
                                    connectorRef: account.harnessImage
                                    image: releases-docker.jfrog.io/jfrog/jfrog-cli-v2-jf
                                    command: |-
                                        #export BUILD_NUMBER=<+execution.steps.BUILD.output.outputVariables.BUILD_NUMBER>
                                        export BUILD_NUMBER=<+pipeline.sequenceId>
                                        echo $BUILD_NUMBER=<+pipeline.sequenceId>
                                        jf config import $REPOX_PROMOTER_CONFIG
                                        if [ -n "${DRONE_COMMIT_LINK:-}" ]; then  
                                            export REPO=poc-harness-dev
                                        else
                                            export REPO=poc-harness-builds
                                        fi
                                        jf rt bpr --status 'it-passed' <+pipeline.variables.PROJECT> $BUILD_NUMBER $REPO
                                    envVariables:
                                        REPOX_PROMOTER_CONFIG: <+secrets.getValue("account.REPOX_PROMOTER_CONFIG")>
        - stage:
              name: IT
              identifier: IT
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      useFromStage: BUILD
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: debug trigger
                                identifier: debug_trigger
                                spec:
                                    connectorRef: account.awsdev
                                    image: 501215020883.dkr.ecr.eu-central-1.amazonaws.com/harness-images-dev:latest
                                    command: |-
                                        echo "trigger type <+pipeline.triggerType>"
                                        echo "trigger name <+pipeline.triggeredBy.name>"
                                        echo "PR <+codebase.prNumber>"
              when:
                  pipelineStatus: Success
                  condition: <+codebase.prNumber> != null
    variables:
        - name: GITHUB_REPO
          type: String
          value: SonarSource-PoC-Hio/sonar-java
        - name: PROJECT
          type: String
          value: sonar-java
        - name: SONAR_HOST_URL
          type: String
          value: https://sonarcloud.io
    flowControl:
        barriers:
            - name: IT
              identifier: IT
